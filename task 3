#include <iostream>
#include <string>

using namespace std;

class Person {
protected:
    string name;
    int age;

public:
    Person() : name("Unknown"), age(0) {}

    Person(const string& name, int age) : name(name), age(age) {}

    Person(const Person& other) : name(other.name), age(other.age) {}

    Person& operator=(const Person& other) {
        if (this != &other) {
            name = other.name;
            age = other.age;
        }
        return *this;
    }

    virtual ~Person() {}

    friend ostream& operator<<(ostream& os, const Person& p) {
        os << "Name: " << p.name << " Age: " << p.age;
        return os;
    }

    friend istream& operator>>(istream& is, Person& p) {
        cout << "Enter name: ";
        is >> p.name;
        cout << "Enter age: ";
        is >> p.age;
        return is;
    }
};

class Student : public Person {
private:
    string university;
    int year;

public:
    Student() : Person(), university("Unknown"), year(1) {}

    Student(const string& name, int age, const string& university, int year)
        : Person(name, age), university(university), year(year) {}

    Student(const Student& other)
        : Person(other), university(other.university), year(other.year) {}

    Student& operator=(const Student& other) {
        if (this != &other) {
            Person::operator=(other);
            university = other.university;
            year = other.year;
        }
        return *this;
    }

    friend ostream& operator<<(ostream& os, const Student& s) {
        os << static_cast<const Person&>(s);
        os << " University: " << s.university << " Year: " << s.year;
        return os;
    }

    friend istream& operator>>(istream& is, Student& s) {
        is >> static_cast<Person&>(s);
        cout << "Enter university: ";
        is >> s.university;
        cout << "Enter year: ";
        is >> s.year;
        return is;
    }
};

int main() {
    Student s1("Oleg", 20, "Oxford", 2);
    Student s2;
    cout << s1 << endl;
    cin >> s2;
    Student s3 = s2;
    cout << s3 << endl;
    return 0;
}
